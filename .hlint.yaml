# Losing variable names can be not-nice
- ignore: { name: Eta reduce }
- ignore: { name: Avoid lambda }

# Humans know better
- ignore: { name: Use camelCase }
- ignore: { name: Use const }
- ignore: { name: Use infix }
- ignore: { name: Use section }
- ignore: { name: Use if }
- ignore: { name: Use notElem }
- ignore: { name: Use fromMaybe }
- ignore: { name: Use maybe }
- ignore: { name: Use isJust }
- ignore: { name: Use isNothing }
- ignore: { name: Use list comprehension }
- ignore: { name: Use fmap }
- ignore: { name: Use foldl }
- ignore: { name: Use unless }
- ignore: { name: Use for }
- ignore: { name: "Use :" }
- ignore: { name: Use ++ }
- ignore: { name: Use || }
- ignore: { name: Use && }
- ignore: { name: 'Use ?~' }
- ignore: { name: Use <$> }
- ignore: { name: Use <$ }
- ignore: { name: Use <=< }
- ignore: { name: Use newtype instead of data }

# These extensions are probably fine but we don't need hlint
# screaming about them.
- ignore: { name: Use lambda-case }
- ignore: { name: Use tuple-section }

# Sometimes we like seeing how many args a constructor has
- ignore: { name: Use record patterns }
